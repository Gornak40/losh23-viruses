#!/usr/bin/python

from random import *
import sys

s = []
cords = []
n, m, k = [int(i) for i in input().split()]
me = int(input())
for i in range(n):
    s.append([-100] + [int(i) for i in input().split()] + [-100])
s.insert(0, [-100 for i in range(m + 2)])
s.append([-100 for i in range(m + 2)])
# for i in s:
#    print(*i, sep=' ')1111111111

while True:
    hod = set()
    towers = []
    prior = []
    for i in range(1, n + 1):
        for j in range(1, m + 1):
            if s[i][j] == me:
                for d1 in [-1, 0, 1]:
                    for d2 in [-1, 0, 1]:
                        i2 = i + d1
                        j2 = j + d2
                        if s[i2][j2] > 0 and s[i2][j2] != me:
                            prior.append((i2, j2))
                        if s[i2][j2] == 0 and s[i2][j2] != me:
                            hod.add((i2, j2))
                        if s[i2][j2] == -me:
                            towers.append((i2, j2))
    used = set()
    while towers:
        i, j = towers[len(towers) - 1]
        towers.pop()
        used.add((i, j))
        for d1 in [-1, 0, 1]:
            for d2 in [-1, 0, 1]:
                i2 = i + d1
                j2 = j + d2
                if s[i2][j2] > 0 and s[i2][j2] != me:
                    prior.append((i2, j2))
                if s[i2][j2] == 0 and s[i2][j2] != me:
                    hod.add((i2, j2))
                if s[i2][j2] == -me and (i2, j2) not in used:
                    towers.append((i2, j2))
    al = prior * 20 + list(hod)
    otv = set()
    if al:
        for i in range(100):
            if len(otv) == 3:
                break
            otv.add(choice(al))
    otv = list(otv)
    for i in range(2):
        if len(otv) < 3:
            for i, j in otv:
                for d1 in [-1, 0, 1]:
                    for d2 in [-1, 0, 1]:
                        i2 = i + d1
                        j2 = j + d2
                        if s[i2][j2] >= 0 and s[i2][j2] != me and (i2, j2) not in otv and len(otv) < 3:
                            otv.append((i2, j2))
                        if s[i2][j2] == -me:
                            towers.append((i2, j2))

    otv = set(otv)
    for i in otv:
        x, y = i
        if s[x][y] == 0:
            s[x][y] = me
        else:
            s[x][y] = -me
    print(me, len(otv), *[' '.join([str(i2) for i2 in i]) for i in otv])
    sys.stdout.flush()
    # for i in s:
    #    print(*i, sep=' ')
    state = input()
    if state == 'o':
        break
    for i in range(k - 1):
        inp = [int(i) for i in input().split()]
        num = inp[0]
        for i in range(inp[1]):
            x = inp[2 + 2 * i]
            y = inp[2 + 2 * i + 1]
            if s[x][y] == 0:
                s[x][y] = num
            else:
                s[x][y] = -num
                # for i in s:
    #    print(*i, sep=' ')
'''1 5 3 
1 
1 2 0 0 3 
r 
2 0 
3 1 1 4'''
